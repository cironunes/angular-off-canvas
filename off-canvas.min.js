"use strict";angular.module("cn.offCanvas",[]).factory("cnOffCanvas",["$compile","$rootScope","$controller","$http","$templateCache","$q",function($compile,$rootScope,$controller,$http,$templateCache,$q){return function(config){function toggle(){return this.isOpened?this.close():this.open()}function open(){return this.isOpened||(this.isOpened=!0,container.toggleClass(containerClass)),promise=$q.defer(),promise.promise}function close(){this.isOpened&&(this.isOpened=!1,container.toggleClass(containerClass)),promise.resolve();var defered=$q.defer();return defered.reject(),defered.promise}if(+!!config.template+ +!!config.templateUrl!==1)throw new Error;var html,container=angular.element(config.container||document.body),containerClass=config.containerClass||"is-off-canvas-opened",controller=config.controller||angular.noop,controllerAs=config.controllerAs,element=null,promise=null;if(config.template){var deferred=$q.defer();deferred.resolve(config.template),html=deferred.promise}else html=$http.get(config.templateUrl,{cache:$templateCache}).then(function(response){return response.data});return html.then(function(html){var scope=$rootScope.$new(),ctrl=$controller(controller,{$scope:scope});controllerAs&&(scope[controllerAs]=ctrl),element=angular.element(html),container.prepend(element),$compile(element)(scope)}),{toggle:toggle,open:open,close:close,isOpened:!1}}}]);