"format amd";!function(){"use strict";function cnOffCanvas(angular){function cnOffCanvasFactory($compile,$rootScope,$controller,$http,$templateCache,$q){return function(config){function toggle(){this.isOpened=!this.isOpened,container.toggleClass(containerClass)}var html,deferred,scope,ctrl,container=angular.element(config.container||document.body),containerClass=config.containerClass||"is-off-canvas-opened",controller=config.controller||angular.noop,controllerAs=config.controllerAs,element=null;if(+!!config.template+ +!!config.templateUrl!==1)throw new Error("You must specify either a `template` or a `templateUrl` to create an off-canvas navigation.");return config.template?(deferred=$q.defer(),deferred.resolve(config.template),html=deferred.promise):html=$http.get(config.templateUrl,{cache:$templateCache}).then(function(response){return response.data}),html.then(function(html){scope=$rootScope.$new(),ctrl=$controller(controller,{$scope:scope}),controllerAs&&(scope[controllerAs]=ctrl),element=angular.element(html),container.prepend(element),$compile(element)(scope)}),{toggle:toggle,isOpened:!1}}}return angular.module("cn.offCanvas",[]).factory("cnOffCanvas",cnOffCanvasFactory),cnOffCanvasFactory.$inject=["$compile","$rootScope","$controller","$http","$templateCache","$q"],"cn.OffCanvas"}var isElectron=window&&window.process&&window.process.type;"function"==typeof define&&define.amd?define(["angular"],cnOffCanvas):"undefined"!=typeof module&&module&&module.exports&&"function"==typeof require&&!isElectron?module.exports=cnOffCanvas(require("angular")):cnOffCanvas(angular)}();